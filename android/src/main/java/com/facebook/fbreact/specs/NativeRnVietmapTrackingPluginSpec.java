
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateModuleJavaSpec.js
 *
 * @nolint
 */

package com.facebook.fbreact.specs;

import com.facebook.proguard.annotations.DoNotStrip;
import com.facebook.react.bridge.Promise;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.ReadableMap;
import com.facebook.react.turbomodule.core.interfaces.TurboModule;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;

public abstract class NativeRnVietmapTrackingPluginSpec extends ReactContextBaseJavaModule implements TurboModule {
  public static final String NAME = "RnVietmapTrackingPlugin";

  public NativeRnVietmapTrackingPluginSpec(ReactApplicationContext reactContext) {
    super(reactContext);
  }

  @Override
  public @Nonnull String getName() {
    return NAME;
  }

  @ReactMethod(isBlockingSynchronousMethod = true)
  @DoNotStrip
  public abstract double multiply(double a, double b);

  @ReactMethod
  @DoNotStrip
  public abstract void startTracking(boolean backgroundMode, double intervalMs, @Nullable Boolean forceUpdateBackground, @Nullable Double distanceFilter, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void stopTracking(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void getCurrentLocation(Promise promise);

  @ReactMethod(isBlockingSynchronousMethod = true)
  @DoNotStrip
  public abstract boolean isTrackingActive();

  @ReactMethod
  @DoNotStrip
  public abstract void getTrackingStatus(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void updateTrackingConfig(ReadableMap config, Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void requestLocationPermissions(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void hasLocationPermissions(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void requestAlwaysLocationPermissions(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void turnOnAlert(Promise promise);

  @ReactMethod
  @DoNotStrip
  public abstract void turnOffAlert(Promise promise);
}
